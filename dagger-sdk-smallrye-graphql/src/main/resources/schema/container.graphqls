type Query {
  """
  Loads a container from ID.

  Null ID returns an empty container (scratch).
  Optional platform argument initializes new containers to execute and publish as that platform.
  Platform defaults to that of the builder's host.
  """
  container(id: ContainerID, platform: Platform): Container!
}

"A unique container identifier. Null designates an empty container (scratch)."
scalar ContainerID

"""
An OCI-compatible container, also known as a docker container.
"""
type Container {
  "A unique identifier for this container."
  id: ContainerID!

  """
  Forces evaluation of the pipeline in the engine.

  It doesn't run the default command if no exec has been set.
  """
  sync: ContainerID!

  "The platform this container executes and publishes as."
  platform: Platform!

  """
  Initializes this container from a pulled base image.
  """
  from(
    """
    Image's address from its registry.

    Formatted as [host]/[user]/[repo]:[tag] (e.g., "docker.io/dagger/dagger:main").
    """
    address: String!
  ): Container!

  """
  Retrieves this container after executing the specified command inside it.
  """
  withExec(
    """
    Command to run instead of the container's default command (e.g., ["run", "main.go"]).

    If empty, the container's default command is used.
    """
    args: [String!]!
  ): Container!

  """
  The output stream of the last executed command.

  Will execute default command if none is set, or error if there's no default.
  """
  stdout: String!
}
